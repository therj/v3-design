{"version":3,"sources":["js/theme.js"],"names":["rootEl","document","querySelector","defaultTheme","getAttribute","DARK_THEME_NAME","LIGHT_THEME_NAME","DEFAULT_THEME_NAME","getTheme","systemPrefersDarkMode","window","matchMedia","matches","themeLocal","localStorage","getItem","isThemeValid","mode","includes","setTheme","setAttribute","CURRENT_THEME","storeThemePreference","isValid","setItem","init","addEventListener"],"mappings":";AACA,IAAMA,EAASC,SAASC,cAAc,SAChCC,EAAeH,EAAOI,aAAa,cAEnCC,EAAkB,OAClBC,EAAmB,QACnBC,EAAqBJ,EAE3B,SAASK,IAEDC,IAAAA,EAAwBC,OAAOC,WACnC,+BACAC,QACIC,EAAaC,aAAaC,QAAQ,SAGpCF,OAAAA,IAAeP,EACVA,EACEO,IAAeR,GAAmBI,EACpCJ,EAEFE,EAIT,SAASS,EAAaC,GACb,MAAA,CAACX,EAAkBD,GAAiBa,SAASD,GAItD,SAASE,EAASF,GACAD,EAAaC,KAE3BjB,EAAOoB,aAAa,aAAcH,GAClCP,OAAOW,cAAgBJ,GAK3B,SAASK,EAAqBL,GACxBM,IAAAA,EAAUP,EAAaC,GAEtBA,IACHM,GAAU,EACVN,EAAO,IAELM,GAAST,aAAaU,QAAQ,QAASP,GAI7C,SAASQ,IACPf,OAAOL,gBAAkBA,EACzBK,OAAOJ,iBAAmBA,EAC1BI,OAAOH,mBAAqBA,EAC5BG,OAAOS,SAAWA,EAClBT,OAAOY,qBAAuBA,EAE9BH,EAASX,KAITE,OAAOgB,iBAAiB,UAAW,WAE3Bb,IAAAA,EAAaH,OAAOI,aAAaC,QAAQ,SAC/CI,EAASN,GAEJG,EAAaH,IAChBS,EAAqBf,KAM3BkB","file":"theme.292221aa.js","sourceRoot":"../src","sourcesContent":["\nconst rootEl = document.querySelector(':root');\nconst defaultTheme = rootEl.getAttribute('data-theme');\n\nconst DARK_THEME_NAME = 'dark';\nconst LIGHT_THEME_NAME = 'light';\nconst DEFAULT_THEME_NAME = defaultTheme;\n\nfunction getTheme() {\n  // If user took time to enable dark theme on their device, respect their choice!\n  const systemPrefersDarkMode = window.matchMedia(\n    '(prefers-color-scheme:dark)'\n  ).matches;\n  const themeLocal = localStorage.getItem('theme');\n\n  // User set > system\n  if (themeLocal === LIGHT_THEME_NAME) {\n    return LIGHT_THEME_NAME;\n  } else if (themeLocal === DARK_THEME_NAME || systemPrefersDarkMode) {\n    return DARK_THEME_NAME;\n  }\n  return DEFAULT_THEME_NAME\n}\n\n\nfunction isThemeValid(mode) {\n  return [LIGHT_THEME_NAME, DARK_THEME_NAME].includes(mode);\n}\n\n\nfunction setTheme(mode) {\n  const isValid = isThemeValid(mode);\n  if (isValid) {\n    rootEl.setAttribute('data-theme', mode);\n    window.CURRENT_THEME = mode;\n  }\n\n}\n\nfunction storeThemePreference(mode) {\n  let isValid = isThemeValid(mode);\n  // nullify if falsy value\n  if (!mode) {\n    isValid = true;\n    mode = '';\n  }\n  if (isValid) localStorage.setItem('theme', mode);\n}\n\n\nfunction init() {\n  window.DARK_THEME_NAME = DARK_THEME_NAME;\n  window.LIGHT_THEME_NAME = LIGHT_THEME_NAME;\n  window.DEFAULT_THEME_NAME = DEFAULT_THEME_NAME;\n  window.setTheme = setTheme;\n  window.storeThemePreference = storeThemePreference;\n\n  setTheme(getTheme());\n\n  // TIP: avoid local storage events, if possible.\n\n  window.addEventListener('storage', () => {\n    // nobody needs this, but dev for devs!\n    const themeLocal = window.localStorage.getItem('theme');\n    setTheme(themeLocal);\n    // Defaulters not welcome!\n    if (!isThemeValid(themeLocal)) {\n      storeThemePreference(DEFAULT_THEME_NAME);\n    }\n  });\n\n}\n\ninit()\n"]}