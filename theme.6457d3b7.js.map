{"version":3,"sources":["js/theme.js"],"names":["rootEl","document","querySelector","defaultTheme","dataset","theme","DARK_THEME_NAME","LIGHT_THEME_NAME","DEFAULT_THEME_NAME","getTheme","systemPrefersDarkMode","window","matchMedia","matches","themeLocal","localStorage","getItem","isThemeValid","mode","includes","setTheme","isValid","setAttribute","CURRENT_THEME","storeThemePreference","setItem","startListeningToOSTheme","matchMediaPrefDark","addEventListener","init"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAMA,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAf,EACA;;AACA,IAAMC,YAAY,GAAGH,MAAM,CAACI,OAAP,CAAeC,KAApC;AAEA,IAAMC,eAAe,GAAG,MAAxB;AACA,IAAMC,gBAAgB,GAAG,OAAzB;AACA,IAAMC,kBAAkB,GAAGL,YAA3B;;AAEA,SAASM,QAAT,GAAoB;AAClB;AACA,MAAMC,qBAAqB,GAAGC,MAAM,CAACC,UAAP,CAC5B,6BAD4B,EAE5BC,OAFF;AAGA,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAnB,CALkB,CAOlB;;AACA,MAAIF,UAAU,KAAKP,gBAAnB,EAAqC;AACnC,WAAOA,gBAAP;AACD,GAFD,MAEO,IAAIO,UAAU,KAAKR,eAAf,IAAkCI,qBAAtC,EAA6D;AAClE,WAAOJ,eAAP;AACD;;AACD,SAAOE,kBAAP;AACD;;AAGD,SAASS,YAAT,CAAsBC,IAAtB,EAA4B;AAC1B,SAAO,CAACX,gBAAD,EAAmBD,eAAnB,EAAoCa,QAApC,CAA6CD,IAA7C,CAAP;AACD;;AAGD,SAASE,QAAT,CAAkBF,IAAlB,EAAwB;AACtB,MAAMG,OAAO,GAAGJ,YAAY,CAACC,IAAD,CAA5B;;AACA,MAAIG,OAAJ,EAAa;AACXrB,IAAAA,MAAM,CAACsB,YAAP,CAAoB,YAApB,EAAkCJ,IAAlC;AACAP,IAAAA,MAAM,CAACY,aAAP,GAAuBL,IAAvB;AACD;AAEF;;AAED,SAASM,oBAAT,CAA8BN,IAA9B,EAAoC;AAClC,MAAIG,OAAO,GAAGJ,YAAY,CAACC,IAAD,CAA1B,CADkC,CAElC;;AACA,MAAI,CAACA,IAAL,EAAW;AACTG,IAAAA,OAAO,GAAG,IAAV;AACAH,IAAAA,IAAI,GAAG,EAAP;AACD;;AACD,MAAIG,OAAJ,EAAaN,YAAY,CAACU,OAAb,CAAqB,OAArB,EAA8BP,IAA9B;AACd;;AACD,SAASQ,uBAAT,GAAmC;AACjC,MAAMC,kBAAkB,GAAGhB,MAAM,CAACC,UAAP,CAAkB,8BAAlB,CAA3B;AACAe,EAAAA,kBAAkB,CAACC,gBAAnB,CAAoC,QAApC,EAA8CR,QAAQ,CAACX,QAAQ,EAAT,CAAtD;AACD;;AAED,SAASoB,IAAT,GAAgB;AACdlB,EAAAA,MAAM,CAACL,eAAP,GAAyBA,eAAzB;AACAK,EAAAA,MAAM,CAACJ,gBAAP,GAA0BA,gBAA1B;AACAI,EAAAA,MAAM,CAACH,kBAAP,GAA4BA,kBAA5B;AACAG,EAAAA,MAAM,CAACS,QAAP,GAAkBA,QAAlB;AACAT,EAAAA,MAAM,CAACa,oBAAP,GAA8BA,oBAA9B;AAEAJ,EAAAA,QAAQ,CAACX,QAAQ,EAAT,CAAR;AAEAiB,EAAAA,uBAAuB,GATT,CAUd;;AACAf,EAAAA,MAAM,CAACiB,gBAAP,CAAwB,SAAxB,EAAmC,YAAM;AACvC;AACA,QAAMd,UAAU,GAAGH,MAAM,CAACI,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAnB;AACAI,IAAAA,QAAQ,CAACN,UAAD,CAAR,CAHuC,CAIvC;;AACA,QAAI,CAACG,YAAY,CAACH,UAAD,CAAjB,EAA+B;AAC7BU,MAAAA,oBAAoB,CAAChB,kBAAD,CAApB;AACD;AACF,GARD;AAUD;;AAEDqB,IAAI","file":"theme.6457d3b7.js","sourceRoot":"../src","sourcesContent":["\nconst rootEl = document.querySelector(':root');\n// const defaultTheme = rootEl.getAttribute('data-theme');\nconst defaultTheme = rootEl.dataset.theme;\n\nconst DARK_THEME_NAME = 'dark';\nconst LIGHT_THEME_NAME = 'light';\nconst DEFAULT_THEME_NAME = defaultTheme;\n\nfunction getTheme() {\n  // If user took time to enable dark theme on their device, respect their choice!\n  const systemPrefersDarkMode = window.matchMedia(\n    '(prefers-color-scheme:dark)'\n  ).matches;\n  const themeLocal = localStorage.getItem('theme');\n\n  // User set > system\n  if (themeLocal === LIGHT_THEME_NAME) {\n    return LIGHT_THEME_NAME;\n  } else if (themeLocal === DARK_THEME_NAME || systemPrefersDarkMode) {\n    return DARK_THEME_NAME;\n  }\n  return DEFAULT_THEME_NAME\n}\n\n\nfunction isThemeValid(mode) {\n  return [LIGHT_THEME_NAME, DARK_THEME_NAME].includes(mode);\n}\n\n\nfunction setTheme(mode) {\n  const isValid = isThemeValid(mode);\n  if (isValid) {\n    rootEl.setAttribute('data-theme', mode);\n    window.CURRENT_THEME = mode;\n  }\n\n}\n\nfunction storeThemePreference(mode) {\n  let isValid = isThemeValid(mode);\n  // nullify if falsy value\n  if (!mode) {\n    isValid = true;\n    mode = '';\n  }\n  if (isValid) localStorage.setItem('theme', mode);\n}\nfunction startListeningToOSTheme() {\n  const matchMediaPrefDark = window.matchMedia('(prefers-color-scheme: dark)');\n  matchMediaPrefDark.addEventListener('change', setTheme(getTheme()));\n}\n\nfunction init() {\n  window.DARK_THEME_NAME = DARK_THEME_NAME;\n  window.LIGHT_THEME_NAME = LIGHT_THEME_NAME;\n  window.DEFAULT_THEME_NAME = DEFAULT_THEME_NAME;\n  window.setTheme = setTheme;\n  window.storeThemePreference = storeThemePreference;\n\n  setTheme(getTheme());\n\n  startListeningToOSTheme()\n  // TIP: avoid local storage events, if possible.\n  window.addEventListener('storage', () => {\n    // nobody needs this, but dev for devs!\n    const themeLocal = window.localStorage.getItem('theme');\n    setTheme(themeLocal);\n    // Defaulters not welcome!\n    if (!isThemeValid(themeLocal)) {\n      storeThemePreference(DEFAULT_THEME_NAME);\n    }\n  });\n\n}\n\ninit()\n"]}